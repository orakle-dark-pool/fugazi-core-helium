/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  FugaziDiamond,
  FugaziDiamondInterface,
} from "../../contracts/FugaziDiamond";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "BatchIsInSettlement",
    type: "error",
  },
  {
    inputs: [],
    name: "EpochNotEnded",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidShortString",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidTokenOrder",
    type: "error",
  },
  {
    inputs: [],
    name: "NotValidSettlementStep",
    type: "error",
  },
  {
    inputs: [],
    name: "OrderAlreadyClaimed",
    type: "error",
  },
  {
    inputs: [],
    name: "PoolAlreadyExists",
    type: "error",
  },
  {
    inputs: [],
    name: "PoolNotFound",
    type: "error",
  },
  {
    inputs: [],
    name: "SignerNotMessageSender",
    type: "error",
  },
  {
    inputs: [],
    name: "SignerNotOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "str",
        type: "string",
      },
    ],
    name: "StringTooLong",
    type: "error",
  },
  {
    inputs: [],
    name: "noCorrespondingFacet",
    type: "error",
  },
  {
    inputs: [],
    name: "notOwner",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "EIP712DomainChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "tokenX",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "tokenY",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "poolId",
        type: "bytes32",
      },
    ],
    name: "PoolCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "poolId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "epoch",
        type: "uint32",
      },
    ],
    name: "batchSettled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes4",
        name: "selector",
        type: "bytes4",
      },
      {
        indexed: false,
        internalType: "address",
        name: "facet",
        type: "address",
      },
    ],
    name: "facetAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "poolId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "epoch",
        type: "uint32",
      },
    ],
    name: "orderSubmitted",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "facet",
            type: "address",
          },
          {
            internalType: "bytes4",
            name: "selector",
            type: "bytes4",
          },
        ],
        internalType: "struct FugaziStorageLayout.facetAndSelectorStruct[]",
        name: "_facetAndSelectors",
        type: "tuple[]",
      },
    ],
    name: "addFacet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "eip712Domain",
    outputs: [
      {
        internalType: "bytes1",
        name: "fields",
        type: "bytes1",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "version",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "verifyingContract",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
      {
        internalType: "uint256[]",
        name: "extensions",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x610160604052601e600760006101000a81548163ffffffff021916908363ffffffff1602179055503480156200003457600080fd5b506040518060400160405280601181526020017f4668656e6978205065726d697373696f6e0000000000000000000000000000008152506040518060400160405280600381526020017f312e300000000000000000000000000000000000000000000000000000000000815250620000b76000836200019860201b90919060201c565b6101208181525050620000d56001826200019860201b90919060201c565b6101408181525050818051906020012060e08181525050808051906020012061010081815250504660a0818152505062000114620001f060201b60201c565b608081815250503073ffffffffffffffffffffffffffffffffffffffff1660c08173ffffffffffffffffffffffffffffffffffffffff1681525050505033600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555062000848565b6000602083511015620001be57620001b6836200024d60201b60201c565b9050620001ea565b82620001d083620002ba60201b60201c565b6000019081620001e191906200053e565b5060ff60001b90505b92915050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60e0516101005146306040516020016200023295949392919062000696565b60405160208183030381529060405280519060200120905090565b600080829050601f815111156200029d57826040517f305a27a900000000000000000000000000000000000000000000000000000000815260040162000294919062000782565b60405180910390fd5b805181620002ab90620007d8565b60001c1760001b915050919050565b6000819050919050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200034657607f821691505b6020821081036200035c576200035b620002fe565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620003c67fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000387565b620003d2868362000387565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b60006200041f620004196200041384620003ea565b620003f4565b620003ea565b9050919050565b6000819050919050565b6200043b83620003fe565b620004536200044a8262000426565b84845462000394565b825550505050565b600090565b6200046a6200045b565b6200047781848462000430565b505050565b5b818110156200049f576200049360008262000460565b6001810190506200047d565b5050565b601f821115620004ee57620004b88162000362565b620004c38462000377565b81016020851015620004d3578190505b620004eb620004e28562000377565b8301826200047c565b50505b505050565b600082821c905092915050565b60006200051360001984600802620004f3565b1980831691505092915050565b60006200052e838362000500565b9150826002028217905092915050565b6200054982620002c4565b67ffffffffffffffff811115620005655762000564620002cf565b5b6200057182546200032d565b6200057e828285620004a3565b600060209050601f831160018114620005b65760008415620005a1578287015190505b620005ad858262000520565b8655506200061d565b601f198416620005c68662000362565b60005b82811015620005f057848901518255600182019150602085019450602081019050620005c9565b868310156200061057848901516200060c601f89168262000500565b8355505b6001600288020188555050505b505050505050565b6000819050919050565b6200063a8162000625565b82525050565b6200064b81620003ea565b82525050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200067e8262000651565b9050919050565b620006908162000671565b82525050565b600060a082019050620006ad60008301886200062f565b620006bc60208301876200062f565b620006cb60408301866200062f565b620006da606083018562000640565b620006e9608083018462000685565b9695505050505050565b600082825260208201905092915050565b60005b838110156200072457808201518184015260208101905062000707565b60008484015250505050565b6000601f19601f8301169050919050565b60006200074e82620002c4565b6200075a8185620006f3565b93506200076c81856020860162000704565b620007778162000730565b840191505092915050565b600060208201905081810360008301526200079e818462000741565b905092915050565b600081519050919050565b6000819050602082019050919050565b6000620007cf825162000625565b80915050919050565b6000620007e582620007a6565b82620007f184620007b1565b9050620007fe81620007c1565b9250602082101562000841576200083c7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8360200360080262000387565b831692505b5050919050565b60805160a05160c05160e051610100516101205161014051610c276200089460003960006104860152600061044b01526000505060005050600050506000505060005050610c276000f3fe60806040526004361061002d5760003560e01c806384b0196e14610159578063fbd8f9751461018a57610034565b3661003457005b60006003600080357fffffffff00000000000000000000000000000000000000000000000000000000167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610133576040517ff1e1c20000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3660008037600080366000845af43d6000803e8060008114610154573d6000f35b3d6000fd5b34801561016557600080fd5b5061016e6101b3565b6040516101819796959493929190610828565b60405180910390f35b34801561019657600080fd5b506101b160048036038101906101ac9190610ae1565b61025d565b005b6000606080600080600060606101c7610442565b6101cf61047d565b46306000801b600067ffffffffffffffff8111156101f0576101ef6108c5565b5b60405190808252806020026020018201604052801561021e5781602001602082028036833780820191505090505b507f0f00000000000000000000000000000000000000000000000000000000000000959493929190965096509650965096509650965090919293949596565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102e4576040517f251c9d6300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b815181101561043e5781818151811061030357610302610b2a565b5b6020026020010151600001516003600084848151811061032657610325610b2a565b5b6020026020010151602001517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507ffba26652d1dc24d314b913e8716fbe82aba3ad20ab138409f10340390f593cb78282815181106103f0576103ef610b2a565b5b60200260200101516020015183838151811061040f5761040e610b2a565b5b602002602001015160000151604051610429929190610b68565b60405180910390a180806001019150506102e7565b5050565b606061047860007f00000000000000000000000000000000000000000000000000000000000000006104b890919063ffffffff16565b905090565b60606104b360017f00000000000000000000000000000000000000000000000000000000000000006104b890919063ffffffff16565b905090565b606060ff60001b83146104d5576104ce83610568565b9050610562565b8180546104e190610bc0565b80601f016020809104026020016040519081016040528092919081815260200182805461050d90610bc0565b801561055a5780601f1061052f5761010080835404028352916020019161055a565b820191906000526020600020905b81548152906001019060200180831161053d57829003601f168201915b505050505090505b92915050565b60606000610575836105dc565b90506000602067ffffffffffffffff811115610594576105936108c5565b5b6040519080825280601f01601f1916602001820160405280156105c65781602001600182028036833780820191505090505b5090508181528360208201528092505050919050565b60008060ff8360001c169050601f811115610623576040517fb3512b0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80915050919050565b60007fff0000000000000000000000000000000000000000000000000000000000000082169050919050565b6106618161062c565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b838110156106a1578082015181840152602081019050610686565b60008484015250505050565b6000601f19601f8301169050919050565b60006106c982610667565b6106d38185610672565b93506106e3818560208601610683565b6106ec816106ad565b840191505092915050565b6000819050919050565b61070a816106f7565b82525050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061073b82610710565b9050919050565b61074b81610730565b82525050565b6000819050919050565b61076481610751565b82525050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61079f816106f7565b82525050565b60006107b18383610796565b60208301905092915050565b6000602082019050919050565b60006107d58261076a565b6107df8185610775565b93506107ea83610786565b8060005b8381101561081b57815161080288826107a5565b975061080d836107bd565b9250506001810190506107ee565b5085935050505092915050565b600060e08201905061083d600083018a610658565b818103602083015261084f81896106be565b9050818103604083015261086381886106be565b90506108726060830187610701565b61087f6080830186610742565b61088c60a083018561075b565b81810360c083015261089e81846107ca565b905098975050505050505050565b6000604051905090565b600080fd5b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6108fd826106ad565b810181811067ffffffffffffffff8211171561091c5761091b6108c5565b5b80604052505050565b600061092f6108ac565b905061093b82826108f4565b919050565b600067ffffffffffffffff82111561095b5761095a6108c5565b5b602082029050602081019050919050565b600080fd5b600080fd5b61097f81610730565b811461098a57600080fd5b50565b60008135905061099c81610976565b92915050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6109d7816109a2565b81146109e257600080fd5b50565b6000813590506109f4816109ce565b92915050565b600060408284031215610a1057610a0f610971565b5b610a1a6040610925565b90506000610a2a8482850161098d565b6000830152506020610a3e848285016109e5565b60208301525092915050565b6000610a5d610a5884610940565b610925565b90508083825260208201905060408402830185811115610a8057610a7f61096c565b5b835b81811015610aa95780610a9588826109fa565b845260208401935050604081019050610a82565b5050509392505050565b600082601f830112610ac857610ac76108c0565b5b8135610ad8848260208601610a4a565b91505092915050565b600060208284031215610af757610af66108b6565b5b600082013567ffffffffffffffff811115610b1557610b146108bb565b5b610b2184828501610ab3565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b610b62816109a2565b82525050565b6000604082019050610b7d6000830185610b59565b610b8a6020830184610742565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610bd857607f821691505b602082108103610beb57610bea610b91565b5b5091905056fea2646970667358221220ee9afc9e5cb9aa98c5307fc594a4f1c3fdf7f0f9d9bfa80e785fd12514be12f764736f6c63430008180033";

type FugaziDiamondConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FugaziDiamondConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FugaziDiamond__factory extends ContractFactory {
  constructor(...args: FugaziDiamondConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      FugaziDiamond & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): FugaziDiamond__factory {
    return super.connect(runner) as FugaziDiamond__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FugaziDiamondInterface {
    return new Interface(_abi) as FugaziDiamondInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): FugaziDiamond {
    return new Contract(address, _abi, runner) as unknown as FugaziDiamond;
  }
}
